@{
    ViewData["Title"] = "Admin Products";
    Layout = "_AdminLayout";
}

@section Css {
    <link href="~/css/Admin/errorForm.css" rel="stylesheet" />
    <link href="~/css/Admin/Products/Products.css" rel="stylesheet" />
}

<div id="Products">
    <h1>Список продуктов</h1>
    <div>
        <div class="form-group">
            <label class="control-label">Категория продукта</label>
            <select v-model="category" class="form-control">
                <option v-bind:value="item" v-for="item in data">{{ item.name }}</option>
            </select>
        </div>
        <div v-if="category != null" class="form-group">
            <label class="control-label">Подкатегория продукта</label>
            <select v-on:change="loadProducts" name="idSubCategoryProduct" v-model="body.CategoryProduct" class="form-control">
                <option v-bind:value="item.id" v-for="item in category.subCategoryProduct"> {{item.name}} </option>
            </select>
        </div>
    </div>
    <div v-if="products != null" class="products__table container-fluid p-0">
        <div class="products__table__header">
            <div class="row text-center">
                <div class="col-2 align-self-center">
                    Номер
                </div>
                <div class="col-6 align-self-center">
                    Название
                </div>
                <div class="col-2 align-self-center">
                    Цена
                </div>
                <div class="col-2 align-self-center">
                    Количество
                </div>
            </div>
        </div>
        <div class="products__table__items">
            <div v-for="item in products">
                <a v-on:click="EditProduct(item)">
                    <div class="row m-0 text-center">
                        <div class="col-2 align-self-center">
                            {{item.id}}
                        </div>
                        <div class="col-6 align-self-center">
                            {{item.name}}
                            <img v-bind:src="getImage(item.poster)" />
                        </div>
                        <div class="col-2 align-self-center">
                            {{item.price}}
                        </div>
                        <div class="col-2 align-self-center">
                            {{item.amount}}
                        </div>
                    </div>
                </a>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>

    <script>
        var ProductApp = new Vue({
            el: '#Products',
            data: () => ({
                data: null,
                category: null,
                body: {
                    CategoryProduct: null
                },

                products: null
            }),
            mounted() {
                axios
                    .get(urlApi + 'api/category/get')
                    .then(
                        response => {
                            this.data = response.data;
                        });
            },
            methods: {
                getImage: function (array) {
                    return 'data:image/jpg;base64, ' + array
                },
                // Переход на страницу редактирования продукта
                EditProduct(item) {
                    let formData = new FormData();
                    formData.append('name', item.name);
                    formData.append('id', item.id);
                    formData.append('CategoryId', this.category.id)
                    formData.append('subcategoryId', this.body.CategoryProduct)
                    formData.append('price', item.price)
                    formData.append('count', item.amount)
                    formData.append('image', item.poster)

                    axios.post(('products/EditProduct'),
                        formData, {
                        headers: {
                            'Content-Type': 'multipart/form-data',
                        }
                    })

                    //axios.get(('products/EditProduct'), {
                    //    params: {
                    //        vm: formData
                    //    }
                    //})
                        .then(
                            response => {
                                $("#Products").html(response.data);
                            });
                },
                loadProducts() {

                    axios.get((urlApi + 'api/product/get'), {
                        params: {
                            CategoryProduct: this.body.CategoryProduct
                        }
                    })

                        .then(
                            response => {
                                this.products = response.data;
                                alert(products);
                            });
                }
            }
        });


    </script>

}
