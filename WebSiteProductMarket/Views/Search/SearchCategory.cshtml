@model WebSiteProductMarket.Models.ViewModels.Search.SearchData

@section Css {

    <link href="~/css/Products/productItem.css" rel="stylesheet" />
    <link href="~/css/search/searchCategory.css" rel="stylesheet" />
}



<div id="productsData" class="products-block container-fluid">
    <h1 v-if="category != null" class="products-block__title">Поиск по категории продукта: {{category.name}}</h1>
    <div class="container-fluid">
        <transition-group name="list" tag="div" class="row">
            <product v-if="products.length > 0" v-for="item in products" v-bind:key="item.id" :data="item"></product>
            <div v-else class="products-block__not-found-block">
                <h2>Нет продуктов в базе данных по данной категории</h2>
            </div>
        </transition-group>
    </div>
    <div class="buttons-navigations text-center mt-3">
        <a v-if="page > 0" class="btn btn-outline-primary m-5" v-bind:href="'/category/search?category='+ idCategory + '&page=' + (page - 1) + '&count=' + count">НАЗАД</a>
        <a v-if="products.length == count" class="btn btn-outline-primary m-5" v-bind:href="'/category/search?category='+ idCategory + '&page=' + (page + 1) + '&count=' + count">ВПЕРЕД</a>
    </div>
</div>





@section Scripts {

    <script src="~/js/Components/ProductComponent.js"></script>
    <script>
        var productsApp = new Vue({
            el: '#productsData',
            data: () => ({
                products: null,
                category: null,
                idCategory: null,
                page: null,
                count: null
            }),
            mounted() {
                this.idCategory = @(Model.idSubCategory);
                this.page = @(Model.page)
                this.count = @(Model.count)


                axios.get((urlApi + 'api/product/category'), {
                    params: {
                        CategoryProduct: this.idCategory,
                        page: this.page,
                        count: this.count
                    }
                })
                    .then(
                        response => {
                            this.products = response.data.products;
                            this.category = response.data.category;
                        });
            },
            methods: {

            }
        });
    </script>

}